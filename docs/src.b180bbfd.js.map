{"version":3,"sources":["../node_modules/fourier-transform/asm.js","index.js"],"names":["audioElt","document","querySelector","soundfile","src","cv","width","window","innerWidth","height","innerHeight","ctx","getContext","gradient","createLinearGradient","addColorStop","fillStyle","samplingRate","leftSamples","rightSamples","cache","audioCtx","AudioContext","loadAudio","fileOrBlob","reader","FileReader","objectUrl","URL","createObjectURL","readAsArrayBuffer","onload","audioBuffer","decodeAudioData","result","getChannelData","playing","playAnim","console","log","response","fetch","blob","input","addEventListener","files","halfWinsize","getFrame","time","centerSample","roundTo","left","slice","Math","max","right","map","v","i","cos","length","PI","ln","hScale","lastFrameTime","frameTimes","clearRect","currentTime","channel","j","x","y","pow","forEach","beginPath","moveTo","lineTo","point","next","control","quadraticCurveTo","fill","now","Date","push","fps","text","reduce","a","toFixed","textWidth","measureText","topOffset","clientHeight","fillText","canvas","requestAnimationFrame","number","precision","round","fillCache","duration"],"mappings":"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","file":"src.b180bbfd.js","sourceRoot":"../src","sourcesContent":["/**\r\n * Real values fourier transform.\r\n *\r\n * @module  fourier-transform\r\n *\r\n */\r\n\r\n'use strict'\r\n\r\nmodule.exports = rfft\r\n\r\n\r\nvar maxLen = 8192\r\nvar maxBytes = 65536 // maxLen * Float64Array.BYTES_PER_ELEMENT\r\n\r\nvar heap = new ArrayBuffer(maxBytes*4)\r\nvar input = new Float64Array(heap, maxBytes, maxLen)\r\nvar output = new Float64Array(heap, maxBytes*2, maxLen/2)\r\nvar _rfft = FFT({Math: Math, Float64Array: Float64Array}, null, heap)\r\n\r\nfunction rfft (src) {\r\n\tif (!src) throw Error('Input data is not provided, pass an array.')\r\n\r\n\tvar n = src.length\r\n\tif (n > maxLen) throw Error('Input length is too big, must be under ' + maxLen)\r\n\r\n\tvar k = Math.floor(Math.log(n) / Math.LN2)\r\n\tif (Math.pow(2, k) !== n) throw Error('Invalid array size, must be a power of 2.')\r\n\r\n\tinput.set(src)\r\n\r\n\t_rfft(n, k)\r\n\r\n\treturn output.subarray(0, n/2)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction FFT(stdlib, foreign, heap) {\r\n\t'use asm'\r\n\r\n\tvar TAU = 6.283185307179586\r\n    var sqrt = stdlib.Math.sqrt\r\n    var sin = stdlib.Math.sin\r\n    var cos = stdlib.Math.cos\r\n    var abs = stdlib.Math.abs\r\n    var SQRT1_2 = stdlib.Math.SQRT1_2\r\n    var imul = stdlib.Math.imul\r\n\r\n\t//memory layout is [x, input, output]\r\n    var arr = new stdlib.Float64Array(heap)\r\n    var x = new stdlib.Float64Array(heap)\r\n\tvar input = 8192\r\n\tvar output = 16384\r\n\r\n\tfunction rfft (n, k) {\r\n        n = n|0\r\n        k = k|0\r\n\r\n\t\t//.forward call\r\n\t\tvar i         = 0, j = 0,\r\n\t\t\tbSi       = 0.0,\r\n\t\t\tn2 = 0, n4 = 0, n8 = 0, nn = 0,\r\n\t\t\tt1 = 0.0, t2 = 0.0, t3 = 0.0, t4 = 0.0,\r\n\t\t\ti1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0, i8 = 0,\r\n\t\t\tst1 = 0.0, cc1 = 0.0, ss1 = 0.0, cc3 = 0.0, ss3 = 0.0,\r\n\t\t\te = 0.0,\r\n\t\t\ta = 0.0,\r\n\t\t\trval = 0.0, ival = 0.0, mag = 0.0\r\n        var ix = 0, i0 = 0, id = 0\r\n\r\n        i = n >>> 1\r\n        bSi = 2.0 / +(n|0)\r\n\r\n\t\treverseBinPermute(n)\r\n\r\n\t\tfor (ix = 0, id = 4; (ix|0) < (n|0); id = imul(id, 4)) {\r\n\t\t\tfor (i0 = ix; (i0|0) < (n|0); i0 = i0 + id|0) {\r\n\t\t\t\t//sumdiff(x[i0], x[i0+1]) // {a, b}  <--| {a+b, a-b}\r\n\t\t\t\tst1 = x[i0 << 3 >> 3] - x[i0+1 << 3 >> 3]\r\n\t\t\t\tx[i0 << 3 >> 3] = x[i0 << 3 >> 3] + x[i0+1 << 3 >> 3]\r\n\t\t\t\tx[i0+1 << 3 >> 3] = st1\r\n\t\t\t}\r\n\t\t\tix = imul(2, (id-1))\r\n\t\t}\r\n\r\n\t\tn2 = 2\r\n\t\tnn = n >>> 1\r\n\r\n\t\twhile((nn = nn >>> 1)) {\r\n\t\t\tix = 0\r\n\t\t\tn2 = n2 << 1\r\n\t\t\tid = n2 << 1\r\n\t\t\tn4 = n2 >>> 2\r\n\t\t\tn8 = n2 >>> 3\r\n\t\t\tdo {\r\n\t\t\t\tif((n4|0) != 1) {\r\n\t\t\t\t\tfor(i0 = ix; (i0|0) < (n|0); i0 = i0 + id|0) {\r\n\t\t\t\t\t\ti1 = i0\r\n\t\t\t\t\t\ti2 = i1 + n4|0\r\n\t\t\t\t\t\ti3 = i2 + n4|0\r\n\t\t\t\t\t\ti4 = i3 + n4|0\r\n\r\n\t\t\t\t\t\t//diffsum3_r(x[i3], x[i4], t1) // {a, b, s} <--| {a, b-a, a+b}\r\n\t\t\t\t\t\tt1 = x[i3 << 3 >> 3] + x[i4 << 3 >> 3]\r\n\t\t\t\t\t\tx[i4 << 3 >> 3] = x[i4 << 3 >> 3] - x[i3 << 3 >> 3]\r\n\t\t\t\t\t\t//sumdiff3(x[i1], t1, x[i3])   // {a, b, d} <--| {a+b, b, a-b}\r\n\t\t\t\t\t\tx[i3 << 3 >> 3] = x[i1 << 3 >> 3] - t1\r\n\t\t\t\t\t\tx[i1 << 3 >> 3] = x[i1 << 3 >> 3] + t1\r\n\r\n\t\t\t\t\t\ti1 = i1 + n8|0\r\n\t\t\t\t\t\ti2 = i2 + n8|0\r\n\t\t\t\t\t\ti3 = i3 + n8|0\r\n\t\t\t\t\t\ti4 = i4 + n8|0\r\n\r\n\t\t\t\t\t\t//sumdiff(x[i3], x[i4], t1, t2) // {s, d}  <--| {a+b, a-b}\r\n\t\t\t\t\t\tt1 = x[i3 << 3 >> 3] + x[i4 << 3 >> 3]\r\n\t\t\t\t\t\tt2 = x[i3 << 3 >> 3] - x[i4 << 3 >> 3]\r\n\r\n\t\t\t\t\t\tt1 = -t1 * SQRT1_2\r\n\t\t\t\t\t\tt2 = t2 * SQRT1_2\r\n\r\n\t\t\t\t\t\t// sumdiff(t1, x[i2], x[i4], x[i3]) // {s, d}  <--| {a+b, a-b}\r\n\t\t\t\t\t\tst1 = +(x[i2 << 3 >> 3])\r\n\t\t\t\t\t\tx[i4 << 3 >> 3] = t1 + st1\r\n\t\t\t\t\t\tx[i3 << 3 >> 3] = t1 - st1\r\n\r\n\t\t\t\t\t\t//sumdiff3(x[i1], t2, x[i2]) // {a, b, d} <--| {a+b, b, a-b}\r\n\t\t\t\t\t\tx[i2 << 3 >> 3] = x[i1 << 3 >> 3] - t2\r\n\t\t\t\t\t\tx[i1 << 3 >> 3] = x[i1 << 3 >> 3] + t2\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor(i0 = ix; (i0|0) < (n|0); i0 = i0 + id|0) {\r\n\t\t\t\t\t\ti1 = i0\r\n\t\t\t\t\t\ti2 = i1 + n4|0\r\n\t\t\t\t\t\ti3 = i2 + n4|0\r\n\t\t\t\t\t\ti4 = i3 + n4|0\r\n\r\n\t\t\t\t\t\t//diffsum3_r(x[i3], x[i4], t1) // {a, b, s} <--| {a, b-a, a+b}\r\n\t\t\t\t\t\tt1 = x[i3 << 3 >> 3] + x[i4 << 3 >> 3]\r\n\t\t\t\t\t\tx[i4 << 3 >> 3] = x[i4 << 3 >> 3] - x[i3 << 3 >> 3]\r\n\r\n\t\t\t\t\t\t//sumdiff3(x[i1], t1, x[i3])   // {a, b, d} <--| {a+b, b, a-b}\r\n\t\t\t\t\t\tx[i3 << 3 >> 3] = x[i1 << 3 >> 3] - t1\r\n\t\t\t\t\t\tx[i1 << 3 >> 3] = x[i1 << 3 >> 3] + t1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tix = (id << 1) - n2|0\r\n\t\t\t\tid = id << 2\r\n\t\t\t} while ((ix|0) < (n|0))\r\n\r\n\t\t\te = TAU / +(n2|0)\r\n\r\n\t\t\tfor (j = 1; (j|0) < (n8|0); j = j + 1|0) {\r\n\t\t\t\ta = +(j|0) * e\r\n\t\t\t\tss1 = sin(a)\r\n\t\t\t\tcc1 = cos(a)\r\n\r\n\t\t\t\t//ss3 = sin(3*a) cc3 = cos(3*a)\r\n\t\t\t\tcc3 = 4.0*cc1*(cc1*cc1-0.75)\r\n\t\t\t\tss3 = 4.0*ss1*(0.75-ss1*ss1)\r\n\r\n\t\t\t\tix = 0; id = n2 << 1\r\n\t\t\t\tdo {\r\n\t\t\t\t\tfor (i0 = ix; (i0|0) < (n|0); i0 = i0 + id|0) {\r\n\t\t\t\t\t\ti1 = i0 + j|0\r\n\t\t\t\t\t\ti2 = i1 + n4|0\r\n\t\t\t\t\t\ti3 = i2 + n4|0\r\n\t\t\t\t\t\ti4 = i3 + n4|0\r\n\r\n\t\t\t\t\t\ti5 = i0 + n4 - j|0\r\n\t\t\t\t\t\ti6 = i5 + n4|0\r\n\t\t\t\t\t\ti7 = i6 + n4|0\r\n\t\t\t\t\t\ti8 = i7 + n4|0\r\n\r\n\t\t\t\t\t\t//cmult(c, s, x, y, &u, &v)\r\n\t\t\t\t\t\t//cmult(cc1, ss1, x[i7], x[i3], t2, t1) // {u,v} <--| {x*c-y*s, x*s+y*c}\r\n\t\t\t\t\t\tt2 = x[i7 << 3 >> 3]*cc1 - x[i3 << 3 >> 3]*ss1\r\n\t\t\t\t\t\tt1 = x[i7 << 3 >> 3]*ss1 + x[i3 << 3 >> 3]*cc1\r\n\r\n\t\t\t\t\t\t//cmult(cc3, ss3, x[i8], x[i4], t4, t3)\r\n\t\t\t\t\t\tt4 = x[i8 << 3 >> 3]*cc3 - x[i4 << 3 >> 3]*ss3\r\n\t\t\t\t\t\tt3 = x[i8 << 3 >> 3]*ss3 + x[i4 << 3 >> 3]*cc3\r\n\r\n\t\t\t\t\t\t//sumdiff(t2, t4)   // {a, b} <--| {a+b, a-b}\r\n\t\t\t\t\t\tst1 = t2 - t4\r\n\t\t\t\t\t\tt2 = t2 + t4\r\n\t\t\t\t\t\tt4 = st1\r\n\r\n\t\t\t\t\t\t//sumdiff(t2, x[i6], x[i8], x[i3]) // {s, d}  <--| {a+b, a-b}\r\n\t\t\t\t\t\t//st1 = x[i6] x[i8] = t2 + st1 x[i3] = t2 - st1\r\n\t\t\t\t\t\tx[i8 << 3 >> 3] = t2 + x[i6 << 3 >> 3]\r\n\t\t\t\t\t\tx[i3 << 3 >> 3] = t2 - x[i6 << 3 >> 3]\r\n\r\n\t\t\t\t\t\t//sumdiff_r(t1, t3) // {a, b} <--| {a+b, b-a}\r\n\t\t\t\t\t\tst1 = t3 - t1\r\n\t\t\t\t\t\tt1 = t1 + t3\r\n\t\t\t\t\t\tt3 = st1\r\n\r\n\t\t\t\t\t\t//sumdiff(t3, x[i2], x[i4], x[i7]) // {s, d}  <--| {a+b, a-b}\r\n\t\t\t\t\t\t//st1 = x[i2] x[i4] = t3 + st1 x[i7] = t3 - st1\r\n\t\t\t\t\t\tx[i4 << 3 >> 3] = t3 + x[i2 << 3 >> 3]\r\n\t\t\t\t\t\tx[i7 << 3 >> 3] = t3 - x[i2 << 3 >> 3]\r\n\r\n\t\t\t\t\t\t//sumdiff3(x[i1], t1, x[i6])   // {a, b, d} <--| {a+b, b, a-b}\r\n\t\t\t\t\t\tx[i6 << 3 >> 3] = x[i1 << 3 >> 3] - t1\r\n\t\t\t\t\t\tx[i1 << 3 >> 3] = x[i1 << 3 >> 3] + t1\r\n\r\n\t\t\t\t\t\t//diffsum3_r(t4, x[i5], x[i2]) // {a, b, s} <--| {a, b-a, a+b}\r\n\t\t\t\t\t\tx[i2 << 3 >> 3] = t4 + x[i5 << 3 >> 3]\r\n\t\t\t\t\t\tx[i5 << 3 >> 3] = x[i5 << 3 >> 3] - t4\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tix = (id << 1) - n2|0\r\n\t\t\t\t\tid = id << 2\r\n\r\n\t\t\t\t} while ((ix|0) < (n|0))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (i = i - 1|0) {\r\n\t\t\trval = +(x[i << 3 >> 3])\r\n\t\t\tival = +(x[n-i-1 << 3 >> 3])\r\n\t\t\tmag = bSi * sqrt(rval * rval + ival * ival)\r\n\t\t\tarr[output + i << 3 >> 3] = mag\r\n\t\t}\r\n\r\n\t\tarr[output + 0 << 3 >> 3] = abs(bSi * x[0 << 3 >> 3])\r\n\t}\r\n\r\n\r\n\tfunction reverseBinPermute (n) {\r\n        n = n|0\r\n\r\n\t\tvar halfSize    = 0,\r\n\t\t\tnm1         = 0,\r\n\t\t\ti = 1, r = 0, h = 0\r\n\r\n\t\thalfSize = n >>> 1\r\n\t\tnm1 = n - 1|0\r\n\r\n\t\tx[0 << 3 >> 3] = arr[input + 0 << 3 >> 3]\r\n\r\n\t\tdo {\r\n\t\t\tr = r + halfSize|0\r\n\t\t\tx[i << 3 >> 3] = arr[input + r << 3 >> 3]\r\n\t\t\tx[r << 3 >> 3] = arr[input + i << 3 >> 3]\r\n\r\n\t\t\ti = i + 1|0\r\n\r\n\t\t\th = halfSize << 1\r\n\r\n\t\t\twhile (h = h >> 1, ((r = r ^ h) & h) == 0) {\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ((r|0) >= (i|0)) {\r\n\t\t\t\tx[i << 3 >> 3]     = arr[input + r << 3 >> 3]\r\n\t\t\t\tx[r << 3 >> 3]     = arr[input + i << 3 >> 3]\r\n\r\n\t\t\t\tx[nm1-i << 3 >> 3] = arr[input + nm1-r << 3 >> 3]\r\n\t\t\t\tx[nm1-r << 3 >> 3] = arr[input + nm1-i << 3 >> 3]\r\n\t\t\t}\r\n\t\t\ti = i + 1|0\r\n\t\t} while ((i|0) < (halfSize|0))\r\n\r\n\t\tx[nm1 << 3 >> 3] = arr[input + nm1 << 3 >> 3]\r\n\r\n\t}\r\n\r\n\treturn rfft\r\n}\r\n","import ft from 'fourier-transform/asm';\nconst audioElt = document.querySelector('audio');\nconst soundfile = audioElt.src;\n\nconst cv = document.querySelector('canvas');\ncv.width = window.innerWidth;\ncv.height = window.innerHeight;\nlet ctx = cv.getContext('2d');\n\nlet gradient = ctx.createLinearGradient(0, 0, cv.width, cv.height);\ngradient.addColorStop(0, '#30bf33');\ngradient.addColorStop(1, '#008ce2');\nctx.fillStyle = gradient;\n\n// TODO: this seems shitty. Should probably get sample rate from file...\nconst samplingRate = 44100;\nlet leftSamples, rightSamples;\nlet cache = {};\n\nconst audioCtx = new AudioContext();\n\nfunction loadAudio(fileOrBlob) {\n  const reader = new FileReader();\n  const objectUrl = URL.createObjectURL(fileOrBlob);\n  audioElt.src = objectUrl;\n  reader.readAsArrayBuffer(fileOrBlob);\n  reader.onload = async () => {\n    const audioBuffer = await audioCtx.decodeAudioData(reader.result);\n    leftSamples = audioBuffer.getChannelData(0);\n    rightSamples = audioBuffer.getChannelData(1);\n    if (!playing)\n      playAnim();\n    console.log('Samples acquired');\n  }\n}\n\n// Load base audio file.\n(async () => {\n  const response = await fetch(soundfile);\n  loadAudio(await response.blob());\n})();\n\nconst input = document.querySelector('input');\ninput.addEventListener('change', async () => {\n  cache = {};\n  loadAudio(input.files[0]);\n});\n\nwindow.addEventListener('resize', () => {\n  cv.width = window.innerWidth;\n  cv.height = window.innerHeight;\n  ctx = cv.getContext('2d');\n\n  gradient = ctx.createLinearGradient(0, 0, cv.width, cv.height);\n  gradient.addColorStop(0, '#30bf33');\n  gradient.addColorStop(1, '#008ce2');\n  ctx.fillStyle = gradient;\n\n  if (!playing)\n    playAnim();\n});\n\nconst halfWinsize = 4096;\n\nfunction getFrame(time) {\n  const centerSample = roundTo(time * samplingRate, samplingRate / 30);\n  // TODO: make cache actually useful\n  if (!cache[centerSample]) {\n    let left = leftSamples.slice(Math.max(0, centerSample - halfWinsize), Math.max(2 * halfWinsize, centerSample + halfWinsize));\n    let right = rightSamples.slice(Math.max(0, centerSample - halfWinsize), Math.max(2 * halfWinsize, centerSample + halfWinsize));\n    left = left.map((v, i) => v * (Math.cos(i / left.length * 2 * Math.PI + Math.PI) + 1));\n    right = right.map((v, i) => v * (Math.cos(i / right.length * 2 * Math.PI + Math.PI) + 1));\n    if (left.length != 2 * halfWinsize) {\n      cache[centerSample] = [\n        [],\n        [],\n      ];\n    } else {\n      cache[centerSample] = [\n        [...ft(left)],\n        [...ft(right)],\n      ];\n    }\n  }\n  return cache[centerSample];\n}\n\nconst ln = Math.log;\nconst hScale = 1 / ln(halfWinsize + 1); // horizontal scaling factor\n\nlet playing = false;\nlet lastFrameTime;\nlet frameTimes = [];\n\nfunction playAnim() {\n  playing = true;\n  ctx.clearRect(0, 0, cv.width, cv.height);\n  const data = leftSamples ? getFrame(audioElt.currentTime) : [];\n\n  const channels = data.map((channel, i) => channel.map((v, j) => {\n    const x = ln(j + 1) * cv.width * hScale;\n    return ({\n      x: x,\n      y: ((i % 2) ? v : -v) * cv.height / 2 * (Math.pow(25, x / cv.width) / 2) + cv.height / 2,\n    })\n  }));\n\n  channels.forEach(channel => {\n    if (channel.length == 0)\n      return;\n    ctx.beginPath();\n    ctx.moveTo(0, cv.height / 2);\n    ctx.lineTo(0, channel[0].y);\n\n    for (let i = 1; i < channel.length - 1; i++) {\n      const point = channel[i];\n      const next = channel[i + 1];\n      const control = {\n        x: (point.x + next.x) * 0.5,\n        y: (point.y + next.y) * 0.5,\n      };\n      // Curve between halfway points using actual points as control points\n      ctx.quadraticCurveTo(point.x, point.y, control.x, control.y);\n    }\n\n    ctx.lineTo(cv.width, channel[channel.length - 1].y);\n    ctx.lineTo(cv.width, cv.height / 2);\n    ctx.fill();\n  })\n\n  let now = Date.now();\n  if (lastFrameTime) {\n    frameTimes.push(now - lastFrameTime);\n  }\n  if (frameTimes.length >= 120) {\n    frameTimes = frameTimes.slice(1);\n    const fps = 1000 / frameTimes.reduce((a, v) => a + v) * frameTimes.length;\n    const text = `FPS: ${fps.toFixed(1)}`;\n    const textWidth = ctx.measureText(text).width;\n    const topOffset = audioElt.clientHeight + 10 + 10; // 10 for padding, 10 for text height\n    ctx.fillText(text, ctx.canvas.width - textWidth - 10, topOffset)\n  }\n  lastFrameTime = now;\n  window.requestAnimationFrame(playAnim);\n}\n\nfunction roundTo(number, precision) {\n  return Math.round(number / precision) * precision;\n}\n\nwindow.fillCache = () => {\n  for (let i = 0; i < audioElt.duration; i += .001) {\n    getFrame(i);\n  }\n}"]}